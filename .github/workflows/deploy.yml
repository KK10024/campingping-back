name: Deploy to GCP VM

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 3. Docker 이미지 빌드 및 Docker Hub로 푸시
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest .
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest

      # 4. GCP VM에 Docker 이미지 배포
      - name: Deploy to GCP VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_PRIVATE_KEY }}
          script: |
            # 기존 컨테이너 중지 및 제거
            docker stop nestjs-app || true
            docker rm -f nestjs-app || true

            # 최신 Docker 이미지 가져오기
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest

            # Docker 컨테이너 실행 및 환경 변수 전달
            docker run -d \
              --name nestjs-app \
              -p 3000:3000 \
              -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              -e KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
              -e KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/nestjs-app:latest
